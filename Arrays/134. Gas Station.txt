134. Gas Station
There are n gas stations along a circular route, where the amount of gas at the ith station is gas[i].

You have a car with an unlimited gas tank and it costs cost[i] of gas to travel 
from the ith station to its next (i + 1)th station. You begin the journey with 
an empty tank at one of the gas stations.

Given two integer arrays gas and cost, return the starting gas station's index 
if you can travel around the circuit once in the clockwise direction, otherwise 
return -1. If there exists a solution, it is guaranteed to be unique

Example 1:

Input: gas = [1,2,3,4,5], cost = [3,4,5,1,2]
Output: 3
Explanation:
Start at station 3 (index 3) and fill up with 4 unit of gas. Your tank = 0 + 4 = 4
Travel to station 4. Your tank = 4 - 1 + 5 = 8
Travel to station 0. Your tank = 8 - 2 + 1 = 7
Travel to station 1. Your tank = 7 - 3 + 2 = 6
Travel to station 2. Your tank = 6 - 4 + 3 = 5
Travel to station 3. The cost is 5. Your gas is just enough to travel back to station 3.
Therefore, return 3 as the starting index.


Example 2:

Input: gas = [2,3,4], cost = [3,4,3]
Output: -1
Explanation:
You can't start at station 0 or 1, as there is not enough gas to travel to the next station.
Let's start at station 2 and fill up with 4 unit of gas. Your tank = 0 + 4 = 4
Travel to station 0. Your tank = 4 - 3 + 2 = 3
Travel to station 1. Your tank = 3 - 3 + 3 = 3
You cannot travel back to station 2, as it requires 4 unit of gas but you only have 3.
Therefore, you can't travel around the circuit once no matter where you start.


Approach:
I have thought for a long time and got two ideas:
Properties:
1. If car starts at A and can not reach B. Any station between A and B
can not reach B.(B is the first station that A can not reach.)
2. If the total number of gas is bigger than the total number of cost. There must be a solution.

Just another proof of property 1:
Facts:

A cannot reach B
B is the 1st point that we cannot reach starting from A.
There are C1,C2, ..., Ck between A and B
A can reach C1, C2, ..., Ck
A --- C1 --- C2  --- ... Ck --- B
Proof by contradiction:
Assume: C1 can reach B
A can reach C1 (by Fact3) & C1 can reach B => A can reach B (Contradict with Fact1 !)
=> assumption is wrong, C1 cannot reach B
Same proof could be applied to C2 ~ Ck
=> any station between A and B that A can reach cannot reach B

Solution:
class Solution:
    def canCompleteCircuit(self, gas: List[int], cost: List[int]) -> int:
	    # Taking care of property 2
        if sum(gas) < sum(cost):
            return -1
        gas_tank, start_index = 0, 0
        
		# Taking care of property 1
        for i in range(len(gas)):
            gas_tank += gas[i] - cost[i]
            
            if gas_tank < 0:
                start_index = i+1
                gas_tank = 0
            
        return start_index